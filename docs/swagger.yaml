definitions:
  models.Gender:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Unknown
    - Male
    - Female
  models.Person:
    properties:
      age:
        type: integer
      gender:
        $ref: '#/definitions/models.Gender'
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  models.UpdatePerson:
    properties:
      age:
        type: integer
      gender:
        $ref: '#/definitions/models.Gender'
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /people:
    delete:
      consumes:
      - application/json
      description: Удаляет запись о человеке по ID. ID передается как query-параметр.
      parameters:
      - description: ID человека
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Запись успешно удалена
        "400":
          description: Ошибка парсинга ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Человек с указанным ID не найден
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удаление человека
      tags:
      - people
    get:
      consumes:
      - application/json
      description: Получение списка людей с фильтрацией по параметрам (id, name, surname,
        patronymic, age, gender, nationality) и пагинацией.
      parameters:
      - description: ID человека
        in: query
        name: id
        type: integer
      - description: Имя человека
        in: query
        name: name
        type: string
      - description: Фамилия человека
        in: query
        name: surname
        type: string
      - description: Отчество человека
        in: query
        name: patronymic
        type: string
      - description: Возраст человека
        in: query
        name: age
        type: integer
      - description: Пол человека
        in: query
        name: gender
        type: string
      - description: Национальность человека
        in: query
        name: nationality
        type: string
      - description: Лимит записей (по умолчанию 10)
        in: query
        name: limit
        type: integer
      - description: Смещение для пагинации (по умолчанию 0)
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Person'
            type: array
        "500":
          description: Ошибка сервера, например, при сбое подключения к базе данных
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получение списка людей
      tags:
      - people
    post:
      consumes:
      - application/json
      description: Создает новую запись о человеке. При создании происходит обогащение
        данных через внешние API.
      parameters:
      - description: Данные нового человека
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.Person'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Person'
        "400":
          description: Ошибка парсинга JSON в теле запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка при обогащении данных или сохранении в базу данных
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создание нового человека
      tags:
      - people
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего человека по ID. ID передается как
        query-параметр.
      parameters:
      - description: ID человека
        in: query
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePerson'
      produces:
      - application/json
      responses:
        "200":
          description: Обновление успешно выполнено
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка парсинга ID или JSON в теле запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Человек с указанным ID не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка при обновлении данных в базе
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновление данных человека
      tags:
      - people
swagger: "2.0"
